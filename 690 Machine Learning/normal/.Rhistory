treat <- data.frame()
for (x in  colnames(X)){
treat[[x]] <- aggregate(list(effect = dat$predest,eff_lb = dat$predlb,eff_ub = dat$predub),
by = list(level = dat[[x]]), function(v) round(mean(v), 2))
pb$tick()
}
treat
}
treat <- avg_treat(X)
a <- vector(mode = "raw", length = 3)
names(a)<-c("a","b","c")
a
a[[a]] <- w
a <- c(w)
a <- c(a,y)
len(a)
length(a)
a <- c(X)
a <- c(X,treat)
length(a)
a
a<-list()
a[["X"]] = X
a[["treat"]] = treat
length(a)
rm(a)
avg_treat <- function(X){
cat("Prediction started.\n")
model_hat <- predict(model, estimate.variance = TRUE)
dat <- as.data.frame(X) %>% mutate_if(is.character, as.factor)
dat$predest <- model_hat$predictions
dat$predvar <- sqrt( model_hat$variance.estimates)
dat$predlb <- dat$predest - 1.96*dat$predvar
dat$predub <- dat$predest + 1.96*dat$predvar
cat("Dataframe initialized.\n")
pb <- progress_bar$new( format = " processing [:bar] :percent eta: :eta", total = ncol(X))
treat <- list()
for (x in  colnames(X)){
treat[[x]] <- aggregate(list(effect = dat$predest,eff_lb = dat$predlb,eff_ub = dat$predub),
by = list(level = dat[[x]]), function(v) round(mean(v), 2))
pb$tick()
}
treat
}
treat <- avg_treat(X)
rm(b)
rm(abc)
object.size(treat)
treat[["upc"]]
plot_part_avg <- function(dat,nc,type="l"){
rec <- dat[[nc]]
plot(rec$level, rec$effect, ylim = range(rec$eff_lb, rec$eff_ub),
,xlim = range(rec$level), xlab = nc, ylab = "treatment effect", type = type)
lines(rec$level, rec$eff_lb, col = 2, lty = 2)
lines(rec$level, rec$eff_ub, col = 3, lty = 2)
lines(rec$level, rep(0,length(temp)), col = 4, lty = 3)
}
plot_part_avg(treat,"price")
plot_part_avg <- function(dat,nc,type="l"){
rec <- dat[[nc]]
plot(rec$level, rec$effect, ylim = range(rec$eff_lb, rec$eff_ub),
,xlim = range(rec$level), xlab = nc, ylab = "treatment effect", type = type)
lines(rec$level, rec$eff_lb, col = 2, lty = 2)
lines(rec$level, rec$eff_ub, col = 3, lty = 2)
lines(rec$level, rep(0,length(rec$level)), col = 4, lty = 3)
}
plot_part_avg(treat,"price")
plot_part_avg(treat,"price",type="p")
plot_part <- function(X,nc,type="l"){
temp <- sort(unique(X[,nc]))
X.test <- Matrix(0,length(temp),ncol(X),sparse = T)
X.test[,nc] <- temp
tau.hat <- predict(model, X.test, estimate.variance = T)
sigma.hat <- sqrt(tau.hat$variance.estimates)
up <- tau.hat$predictions + 1.96 * sigma.hat
lw <- tau.hat$predictions - 1.96 * sigma.hat
plot(temp , tau.hat$predictions, ylim = range(lw,up),xlim = range(temp), xlab = colnames(X)[nc],
ylab = "treatment effect", type = type)
lines(temp , lw, col = 2, lty = 2)
lines(temp , up, col = 3, lty = 2)
lines(temp , rep(0,length(temp)), col = 4, lty = 3)
}
plot_part(X,34,type="p")
plot_part(X,34)
plot_part_avg(treat,"week")
plot_part_avg(treat,"brand")
plot_part_avg(treat,"type")
plot_part_avg(treat,"fstv",type="p")
plot_part_avg(treat,"highrev",type="p")
unique(X[["highrev"]])
colnames(X)
unique(X["highrev"])
View(X)
View(X[36])
unique(X[,36])
treat[["highrev"]]
library(readr)
library(tidyverse)
library(plyr)
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
mvbr$store_id<-factor(mvbr$store_id) # 89
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
mvbr$brand <- factor(mvbr$brand) # 48
mvbr$type <- factor(mvbr$type) # 28
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev0 = ifelse(rev > avgrev, 1, 0)  ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev) %>%
mutate(num0 = n_distinct(upc) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
View(mvbeer)
View(mvbeer)
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev)) %>%
mutate(num0 = n_distinct(upc)) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
summary(mvbeer$highrev)
mvbeer %>% group_by(store_id, week) %>%
transmutate(sum0 = sum(rev))
mvbeer %>% group_by(store_id, week) %>%
transmute(sum0 = sum(rev))
sum(mvbeer$store_id==2)
mvbeer %>% group_by(store_id, week)
mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev)) %>%
)
mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev))
mvbeer %>% group_by(store_id, week) %>%  mutate(sum0 = sum(rev)) [["sum0"]]
(mvbeer %>% group_by(store_id, week) %>%  mutate(sum0 = sum(rev)) )[["sum0"]]
unique(mvbeer$sum0)
sum(mvbeer$rev)
mvbeer %>% group_by(store_id, week) %>%  mutate(sum0 = mean(rev)) [["sum0"]]
(mvbeer %>% group_by(store_id, week) %>%  mutate(sum0 = mean(rev)) )[["sum0"]]
(mvbeer %>% group_by_(store_id, week) %>%  mutate(sum0 = sum(rev)) )[["sum0"]]
(mvbeer %>% group_by(store_id, week) %>%  mutate(sum0 = sum(rev)) )[["sum0"]]
is.grouped_df(mvbeer %>% group_by(store_id, week))
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
# mvbr$store_id<-factor(mvbr$store_id)
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
summary(mvbeer$highrev)
data.frame(a = c(10, 100)) %>% summarise(sum(a), sum(a) * 2)
mvbeer %>% group_by(store_id, week) %>% summarize(um0 = sum(rev))
mvbeer %>% group_by(store_id, week) %>% transmute(um0 = sum(rev))
mvbeer %>% group_by(store_id, week) %>% summarize(um0 = mean(rev))
mvbeer %>% group_by(store_id, week) %.% summarize(um0 = mean(rev))
mvbeer %>% group_by(store_id, week) %>% summarize(um0 = mean(rev))
mvbeer %>% group_by(store_id, week) %>% summarize(rev)
library(readr)
library(plyr)
library(tidyverse)
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
mvbr$store_id<-factor(mvbr$store_id) # 89
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
mvbr$brand <- factor(mvbr$brand) # 48
mvbr$type <- factor(mvbr$type) # 28
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev)) %>%
mutate(num0 = n_distinct(upc)) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
library(readr)
library(plyr)
library(tidyverse)
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
mvbr$store_id<-factor(mvbr$store_id) # 89
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
mvbr$brand <- factor(mvbr$brand) # 48
mvbr$type <- factor(mvbr$type) # 28
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev)) %>%
mutate(num0 = n_distinct(upc)) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
library(readr)
library(plyr)
library(tidyverse)
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- plyr::rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- plyr::rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
plyr::rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
mvbr$store_id<-factor(mvbr$store_id) # 89
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
mvbr$brand <- factor(mvbr$brand) # 48
mvbr$type <- factor(mvbr$type) # 28
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(sum0 = sum(rev)) %>%
mutate(num0 = n_distinct(upc)) %>%
mutate(avgrev = sum(rev)/n_distinct(upc) ) %>%
mutate(highrev = ifelse(rev > sum(rev)/n_distinct(upc), 1, 0) )
View(mvbeer)
summary(mvbeer$highrev)
hist(mvbeer$highrev))
hist(mvbeer$highrev)
library(readr)
library(plyr)
library(tidyverse)
one_hot <- function(df, cols="auto",dropCols=T){
if(cols[1] == "auto") cols <- colnames(df)[which(sapply(df, function(x) is.factor(x) & !is.ordered(x)))]
for(col in cols){
lv <- levels(df[[col]])
for(i in lv){
st <- str_c(col,i,sep = "_")
df[[st]] <- ifelse( df[[col]]==i, 1,0)
}
}
if(dropCols == T) df[!names(df) %in% cols]
else df
}
read <- function(st){ read_csv(str_c("data",st,sep='/'))}
upcbr <- read("upcbr.csv")
colnames(upcbr) <- tolower(colnames(upcbr))
upcbr <- plyr::rename(upcbr[2:5], c("descrip" = "name"))
upcbr <- upcbr %>% left_join( read('brand.csv'), by = c('upc' = 'UPC') ) %>%
left_join( read('vol.csv'), by = 'upc')
upcbr[is.na(upcbr$brand),]$brand <- 'other'
upcbr[is.na(upcbr$type),]$type <- 'other'
mvbr <- drop_na(read("mvbr.csv"),c("UPC"))
colnames(mvbr) <- tolower(colnames(mvbr))
mvbr <- plyr::rename(mvbr[-c(10,11)], c("qty" = "bundle","store" = "store_id","move" = "sold"))
demo <- drop_na(read("demo.csv"),c("name")) %>%
select( mmid:shpindx ) %>%
plyr::rename(c("store" = "store_id", "name" = "store"))
# cc <- drop_na(read('ccount.csv'),c("date","grocery")) %>%
#       rename(c("store" = "store_id"))
mvbr <-  left_join(mvbr, upcbr, by = "upc" ) %>%
left_join( demo, by = "store_id") %>%
mutate( sale = ifelse( is.na(sale)==FALSE, sale, "N")) %>%
left_join( read("cc_brn.csv"), by = c("store_id", "week"))
mvbr$sale <- factor(mvbr$sale)
mvbr <- one_hot(mvbr) %>% mutate( sale = ifelse( sale_N != 1, 1,0))
mvbr$sale_N <- NULL
mvbr$store_id<-factor(mvbr$store_id) # 89
# mvbr <- one_hot(mvbr)
festival_week <- c(7,11,15,16,23,28,59,63,67,37,68,42,75,51,81,89,95,119,120,128,103,112,
116,133,141,147,156,164,168,180,185,194,199,172,173,208,216,220,224,225,
232,246,251,260,238,268,272,276,277,284,303,312,289,298,320,324,328,329,
336,341,364,372,377,50,356,380,381,389,393)
mvbr <-  mvbr %>% mutate( fstv = ifelse(week %in% festival_week, 1, 0)) %>%
mutate( rev = sold * price)
rm(festival_week)
mvbr$brand <- factor(mvbr$brand) # 48
mvbr$type <- factor(mvbr$type) # 28
colnames(mvbr)
###  sum(is.na(mvbr$gini)) # All none.
###   some store do not have demographic data  ###
###  sum(is.na(mvbr$educ)) # 29082
###  unique(mvbr[is.na(mvbr$educ),]$store_id) # 136 140 133 135 141 142 143 144 146 139
###  sum(mvbr$store_id %in% mvbr[is.na(mvbr$educ),]$store_id) # 29082
mvbeer <- select(mvbr,c(store_id:week,brand:vol,age9:incsigma,hsizeavg:workwom,hvalmean:unemp,
shpindx:month,mortgage:poverty,price,sale_B:rev))
mvbeer <- mvbeer %>% group_by(store_id, week) %>%
mutate(highrev = ifelse(rev >= sum(rev)/n_distinct(upc) && rev>0, 1, 0) )
View(mvbr)
View(mvbeer)
rm(demo);rm(mvbr);rm(upcbr);rm(one_hot);rm(read)
write_csv(mvbeer,"data/mvbeer.csv")
